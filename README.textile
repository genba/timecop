h1. Timecop

h2. What is Timecop?

Timecop is a Redmine plugin witch constrols issues' worked time.

Timecop is different from native Redmine's time control, because it asks to user the start and the finish date/time.

!https://raw.githubusercontent.com/asseinfo/timecop/master/readme-example.png!

h2. Install

Let's suppose your redmine is installed at <tt>/var/www/redmine</tt>.

<pre>
$ cd /var/www/redmine
$ cd plugins
$ git clone https://github.com/asseinfo/timecop.git
$ bundle exec rake redmine:plugins:migrate RAILS_ENV=production
</pre>

After this, restart your redmine.

h2. Uninstall

Let's suppose your redmine is installed at <tt>/var/www/redmine</tt>.

<pre>
$ cd /var/www/redmine
$ cd plugins
$ bundle exec rake redmine:plugins:migrate NAME=timecop VERSION=0 RAILS_ENV=production
$ rm -rf timecop
</pre>

h2. Send report by e-mail

Timecop can send a report by e-mail with yesterday, last week and last month time. It can be executed throught a rake task:

<tt>$ bundle exec rake timecop:report["foo@bar.com"] RAILS_ENV=production</tt>

Where foo@bar.com is the recipient mailbox.

h3. Scheduling at crontab

You can schedule the report at crontab. See example above:

<pre>
$ sudo vim /etc/timecop-report.sh
cd /var/www/redmine
bundle exec rake timecop:report["foo@bar.com"] RAILS_ENV=production
</pre>

<pre>
$ crontab -e
55 14 * * * /bin/bash -l /etc/timecop-report.sh
</pre>

h2. Contributing

We encourage you to contribute to Timecop!

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request

h2. License

Timecop is released under the [MIT License](http://www.opensource.org/licenses/MIT).
